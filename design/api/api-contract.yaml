openapi: 3.0.3
info:
  title: AI-Powered Service Config Creator API
  description: |
    A unified, schema-driven service configuration generator that uses AI to intelligently guide users through creating any type of configuration based on JSON schemas.
    
    ## Core Features
    - **AI-Supported Schema-Driven Creation**: AI reads JSON schemas to understand each section
    - **Multi-Attribute Input Processing**: Extract multiple attributes from single user input
    - **Dynamic Progression**: Interface adapts based on user completion
    - **Natural Language Intent Detection**: Comprehensive command recognition
    - **Schema Validation**: Ensures generated configs match schema requirements exactly
    
    ## Architecture
    - **Generic**: Supports ANY configuration type defined in schemas
    - **Extensible**: Add new sections by creating schema files only
    - **Self-Documenting**: Schemas define descriptions, examples, and validation rules
    - **No Hardcoding**: Everything is driven by schema files
  version: 1.0.0
  contact:
    name: API Support
    email: support@serviceconfig.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3001
    description: Development server
  - url: https://api.serviceconfig.com
    description: Production server

tags:
  - name: Health
    description: Health check endpoints
  - name: Configuration Generation
    description: AI-powered configuration generation endpoints
  - name: Configuration Validation
    description: Schema-based configuration validation
  - name: Documentation
    description: Schema documentation and guidance endpoints
  - name: External Services
    description: External service integration endpoints

paths:
  /health:
    get:
      tags:
        - Health
      summary: Health check
      description: Check if the API is running and healthy
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "OK"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-01-15T10:30:00.000Z"
                  version:
                    type: string
                    example: "1.0.0"

  /api/generate-config/ai-guided:
    post:
      tags:
        - Configuration Generation
      summary: Generate AI-guided configuration
      description: |
        Generate configuration using AI with enhanced input processing, multi-attribute extraction, and dynamic context awareness.
        
        Supports:
        - Multi-attribute input processing (e.g., "create a module called tradelicence and service as NewTl")
        - Affirmative response handling (e.g., "yes", "ok", "fine")
        - Default configuration generation
        - Context-aware progression
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - section
                - details
              properties:
                section:
                  type: string
                  description: The configuration section to generate
                  example: "module"
                details:
                  type: object
                  description: User input details for configuration generation
                  properties:
                    prompt:
                      type: string
                      description: Natural language prompt from user
                      example: "create a module called tradelicence and service as NewTl"
                context:
                  type: object
                  description: Context information for AI generation
                  properties:
                    currentSection:
                      type: string
                      description: Current section being configured
                    completedSections:
                      type: array
                      items:
                        type: string
                      description: List of completed sections
                    existingConfig:
                      type: object
                      description: Existing configuration object
                    useDefault:
                      type: boolean
                      description: Whether to use default configuration
                    multiAttributes:
                      type: object
                      description: Extracted multi-attributes from user input
      responses:
        '200':
          description: Configuration generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  section:
                    type: string
                    example: "module"
                  config:
                    type: object
                    description: Generated configuration
                    example:
                      module: "tradelicence"
                      service: "NewTl"
                  context:
                    type: object
                    description: Context information
                  timestamp:
                    type: string
                    format: date-time
                  suggestions:
                    type: array
                    items:
                      type: string
                    description: Next step suggestions
                  multiAttributes:
                    type: object
                    description: Multi-attribute configurations
        '400':
          description: Bad request - missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/validate-config:
    post:
      tags:
        - Configuration Validation
      summary: Validate configuration against schema
      description: Validate a configuration object against the specified section schema
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  description: Configuration object to validate
                  example:
                    module: "tradelicence"
                    service: "NewTl"
                section:
                  type: string
                  description: Section name for validation
                  example: "module"
      responses:
        '200':
          description: Validation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: true
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidationError'
                  message:
                    type: string
                    example: "Configuration is valid"
        '400':
          description: Bad request - missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/validate-config/{section}:
    post:
      tags:
        - Configuration Validation
      summary: Validate specific section configuration
      description: Validate a configuration object against a specific section schema
      parameters:
        - name: section
          in: path
          required: true
          schema:
            type: string
          description: Section name for validation
          example: "module"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
              properties:
                config:
                  type: object
                  description: Configuration object to validate
                  example:
                    module: "tradelicence"
      responses:
        '200':
          description: Validation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    example: true
                  section:
                    type: string
                    example: "module"
                  errors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ValidationError'
                  message:
                    type: string
                    example: "module configuration is valid"
        '400':
          description: Bad request - missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/docs:
    get:
      tags:
        - Documentation
      summary: Get all available sections
      description: Retrieve all available configuration sections
      responses:
        '200':
          description: Available sections retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sections:
                    type: array
                    items:
                      type: string
                    example: ["module", "service", "fields", "workflow"]
                  total:
                    type: integer
                    example: 16
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/docs/create-requirements:
    get:
      tags:
        - Documentation
      summary: Get configuration creation requirements
      description: Retrieve dynamic creation requirements based on available schemas
      responses:
        '200':
          description: Creation requirements retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  steps:
                    type: array
                    items:
                      $ref: '#/components/schemas/CreationStep'
                  preConfiguredSections:
                    type: array
                    items:
                      $ref: '#/components/schemas/PreConfiguredSection'
                  informationCards:
                    type: array
                    items:
                      $ref: '#/components/schemas/InformationCard'
                  requiredSections:
                    type: array
                    items:
                      type: string
                  availableSections:
                    type: array
                    items:
                      type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/docs/section-order:
    get:
      tags:
        - Documentation
      summary: Get section order
      description: Retrieve the recommended order for configuration sections
      responses:
        '200':
          description: Section order retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: array
                    items:
                      type: string
                    example: ["module", "service", "fields", "workflow"]
                  required:
                    type: array
                    items:
                      type: string
                    example: ["module", "service", "fields"]

  /api/docs/{section}:
    get:
      tags:
        - Documentation
      summary: Get section documentation
      description: Retrieve documentation for a specific configuration section
      parameters:
        - name: section
          in: path
          required: true
          schema:
            type: string
          description: Section name
          example: "module"
      responses:
        '200':
          description: Section documentation retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  section:
                    type: string
                    example: "module"
                  name:
                    type: string
                    example: "Module"
                  description:
                    type: string
                    example: "Basic module information and configuration"
                  type:
                    type: string
                    example: "string"
                  required:
                    type: boolean
                    example: true
                  examples:
                    type: array
                    items:
                      type: string
                    example: ["tradelicence", "propertytax", "watercharge"]
                  documentation:
                    type: object
                    properties:
                      description:
                        type: string
                      usage:
                        type: string
                      examples:
                        type: array
                        items:
                          type: string
                      helperText:
                        type: string
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/docs/{section}/schema:
    get:
      tags:
        - Documentation
      summary: Get section schema
      description: Retrieve the JSON schema for a specific configuration section
      parameters:
        - name: section
          in: path
          required: true
          schema:
            type: string
          description: Section name
          example: "module"
      responses:
        '200':
          description: Section schema retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  section:
                    type: string
                    example: "module"
                  schema:
                    type: object
                    description: JSON schema for the section
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/docs/{section}/examples:
    get:
      tags:
        - Documentation
      summary: Get section examples
      description: Retrieve examples for a specific configuration section
      parameters:
        - name: section
          in: path
          required: true
          schema:
            type: string
          description: Section name
          example: "module"
      responses:
        '200':
          description: Section examples retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  section:
                    type: string
                    example: "module"
                  examples:
                    type: array
                    items:
                      type: object
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/docs/generate-json:
    post:
      tags:
        - Documentation
      summary: Generate JSON from guided questions
      description: Generate JSON configuration from guided question answers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fieldName
                - answers
              properties:
                fieldName:
                  type: string
                  description: Field name for generation
                  example: "fields"
                answers:
                  type: object
                  description: Answers to guided questions
                  example:
                    fieldCount: "3"
                    fieldNames: "name,email,phone"
                questions:
                  type: array
                  items:
                    $ref: '#/components/schemas/GuidedQuestion'
      responses:
        '200':
          description: JSON generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  fieldName:
                    type: string
                    example: "fields"
                  generatedJson:
                    type: object
                    description: Generated JSON configuration
        '400':
          description: Bad request - missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/docs/ai-guided/info:
    get:
      tags:
        - Documentation
      summary: Get AI-guided information
      description: Retrieve AI-guided configuration information for all sections
      responses:
        '200':
          description: AI-guided information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  sections:
                    type: array
                    items:
                      $ref: '#/components/schemas/AIGuidedSection'
                  requiredSections:
                    type: array
                    items:
                      type: string
                  totalSections:
                    type: integer
                    example: 16
                  availableSections:
                    type: array
                    items:
                      type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/docs/ai-guided/{section}:
    get:
      tags:
        - Documentation
      summary: Get section-specific AI guidance
      description: Retrieve AI guidance and prompts for a specific section
      parameters:
        - name: section
          in: path
          required: true
          schema:
            type: string
          description: Section name
          example: "module"
      responses:
        '200':
          description: AI guidance retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  section:
                    type: string
                    example: "module"
                  schema:
                    type: object
                    description: Section schema
                  documentation:
                    type: object
                    description: Section documentation
                  aiPrompts:
                    type: object
                    properties:
                      welcome:
                        type: string
                      description:
                        type: string
                      examples:
                        type: array
                        items:
                          type: object
                      suggestions:
                        type: array
                        items:
                          type: string
                      questions:
                        type: array
                        items:
                          type: string
                      copyablePrompts:
                        type: array
                        items:
                          $ref: '#/components/schemas/CopyablePrompt'
                  guidedQuestions:
                    type: array
                    items:
                      $ref: '#/components/schemas/GuidedQuestion'
                  generationLogic:
                    type: object
                    description: Generation logic for the section
                  examples:
                    type: array
                    items:
                      type: object
                  validation:
                    type: object
                    properties:
                      type:
                        type: string
                      schema:
                        type: object
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/docs/ai-guided/context/{section}:
    get:
      tags:
        - Documentation
      summary: Get AI context for section
      description: Retrieve AI context information for a specific section
      parameters:
        - name: section
          in: path
          required: true
          schema:
            type: string
          description: Section name
          example: "module"
        - name: completedSections
          in: query
          schema:
            type: string
          description: Comma-separated list of completed sections
          example: "module,service"
        - name: currentConfig
          in: query
          schema:
            type: string
          description: Current configuration as JSON string
          example: '{"module":"tradelicence","service":"NewTl"}'
      responses:
        '200':
          description: AI context retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentSection:
                    type: string
                    example: "fields"
                  completedSections:
                    type: array
                    items:
                      type: string
                    example: ["module", "service"]
                  existingConfig:
                    type: object
                    description: Existing configuration
                  schema:
                    type: object
                    description: Section schema
                  documentation:
                    type: object
                    description: Section documentation
                  suggestions:
                    type: array
                    items:
                      type: string
                    description: Contextual suggestions
        '404':
          description: Section not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/external-service:
    post:
      tags:
        - External Services
      summary: Send configuration to external service
      description: Send generated configuration to external services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - config
                - service
              properties:
                config:
                  type: object
                  description: Configuration to send
                service:
                  type: string
                  description: External service name
                  example: "github"
                options:
                  type: object
                  description: Service-specific options
      responses:
        '200':
          description: Configuration sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Configuration sent to external service"
        '400':
          description: Bad request - missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Bad Request"
        message:
          type: string
          example: "Missing required field: config"

    ValidationError:
      type: object
      properties:
        field:
          type: string
          example: "/module"
        message:
          type: string
          example: "should match pattern \"^[a-z]+$\""
        code:
          type: string
          example: "pattern"
        params:
          type: object
          properties:
            pattern:
              type: string
              example: "^[a-z]+$"

    CreationStep:
      type: object
      properties:
        label:
          type: string
          example: "Required Configuration"
        description:
          type: string
          example: "Configure the required schema fields"
        fields:
          type: array
          items:
            $ref: '#/components/schemas/CreationField'

    CreationField:
      type: object
      properties:
        name:
          type: string
          example: "module"
        label:
          type: string
          example: "Module"
        type:
          type: string
          example: "text"
        required:
          type: boolean
          example: true
        helperText:
          type: string
          example: "Enter the module value"
        validation:
          type: object
          properties:
            minLength:
              type: integer
              example: 1
            maxLength:
              type: integer
              example: 100
            pattern:
              type: string
              example: "^[a-z]+$"

    PreConfiguredSection:
      type: object
      properties:
        name:
          type: string
          example: "workflow"
        label:
          type: string
          example: "Workflow"
        type:
          type: string
          example: "object"
        required:
          type: boolean
          example: false
        enabled:
          type: boolean
          example: true
        helperText:
          type: string
          example: "Configure workflow (pre-configured)"

    InformationCard:
      type: object
      properties:
        title:
          type: string
          example: "Module"
        description:
          type: string
          example: "Configure module settings"
        type:
          type: string
          example: "required"
        status:
          type: string
          example: "available"
        helperText:
          type: string
          example: "This section is required for the configuration"

    AIGuidedSection:
      type: object
      properties:
        name:
          type: string
          example: "module"
        label:
          type: string
          example: "Module"
        type:
          type: string
          example: "string"
        required:
          type: boolean
          example: true
        description:
          type: string
          example: "Basic module information and configuration"
        examples:
          type: array
          items:
            type: string
        guidedQuestions:
          type: array
          items:
            $ref: '#/components/schemas/GuidedQuestion'
        generationLogic:
          type: object
          nullable: true
        validation:
          type: object
          properties:
            type:
              type: string
              example: "json"
            schema:
              type: object
        helperText:
          type: string
          example: "Enter module configuration"
        order:
          type: integer
          example: 1

    GuidedQuestion:
      type: object
      properties:
        id:
          type: string
          example: "fieldCount"
        question:
          type: string
          example: "How many fields do you need?"
        type:
          type: string
          example: "number"
        suggestions:
          type: array
          items:
            type: string
          example: ["1", "2", "3", "4", "5"]

    CopyablePrompt:
      type: object
      properties:
        title:
          type: string
          example: "Basic Module"
        prompt:
          type: string
          example: "Create a module called [module_name]"
        description:
          type: string
          example: "Basic module configuration"

security:
  - ApiKeyAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (if required)

externalDocs:
  description: Find more info about the API
  url: https://github.com/your-repo/service-config-creator 