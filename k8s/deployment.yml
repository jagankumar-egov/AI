apiVersion: v1
kind: Namespace
metadata:
  name: ai-config-creator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-config-backend
  namespace: ai-config-creator
  labels:
    app: ai-config-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-config-backend
  template:
    metadata:
      labels:
        app: ai-config-backend
    spec:
      containers:
      - name: backend
        image: ghcr.io/your-username/ai-config-creator-backend:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-config-secrets
              key: openai-api-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-config-frontend
  namespace: ai-config-creator
  labels:
    app: ai-config-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-config-frontend
  template:
    metadata:
      labels:
        app: ai-config-frontend
    spec:
      containers:
      - name: frontend
        image: ghcr.io/your-username/ai-config-creator-frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ai-config-backend-service
  namespace: ai-config-creator
spec:
  selector:
    app: ai-config-backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3001
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: ai-config-frontend-service
  namespace: ai-config-creator
spec:
  selector:
    app: ai-config-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-config-ingress
  namespace: ai-config-creator
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - ai-config.yourdomain.com
    secretName: ai-config-tls
  rules:
  - host: ai-config.yourdomain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: ai-config-backend-service
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-config-frontend-service
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: ai-config-secrets
  namespace: ai-config-creator
type: Opaque
data:
  openai-api-key: <base64-encoded-openai-api-key> 